// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    Not(in=sel[2], out=notselbit2);
    Not(in=sel[1], out=notselbit1);
    // first layer of AND gates
    And(a=in, b=notselbit2, out=seldmuxfirsthalf);
    And(a=in, b=sel[2], out=seldmuxsecondhalf);
    // second layer of AND gates
    And(a=seldmuxfirsthalf, b=notselbit1, out=seladmuxb);
    And(a=seldmuxfirsthalf, b=sel[1], out=selcdmuxd);
    And(a=seldmuxsecondhalf, b=notselbit1, out=seledmuxf);
    And(a=seldmuxsecondhalf, b=sel[1], out=selgdmuxh);
    // DMUX layer
    DMux(in=seladmuxb, sel=sel[0], a=a, b=b);
    DMux(in=selcdmuxd, sel=sel[0], a=c, b=d);
    DMux(in=seledmuxf, sel=sel[0], a=e, b=f);
    DMux(in=selgdmuxh, sel=sel[0], a=g, b=h);
}